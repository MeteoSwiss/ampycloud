#
# Copyright (c) 2021-2022 MeteoSwiss, contributors listed in AUTHORS.
#
# Distributed under the terms of the 3-Clause BSD License.
#
# SPDX-License-Identifier: BSD-3-Clause
#
# File contains: default scientific parameters of the ampycloud algorithm
#

# General parameters

# Plotting style. Can be one of 'base', 'latex', 'metsymb'
MPL_STYLE: 'base'

# Minimum Sector Altitude, in ft. No cloud layers with a base above this value will be reported
# in the ampycloud METAR messages. Set it to null for no limit.
MSA: null

# Additional distance above the MSA value (in ft) beyond which hits will be ignored (=cropped) by
# ampycloud. This is to ensure that cloud layers with cloud base heights close to the MSA value are
# still detected with the correct densities.
MSA_HIT_BUFFER: 1500

# Max number of hits in a layer to still consider it to be of 0 oktas.
MAX_HITS_OKTA0: 3

# Max number of holes (=non-detection of cloud) in a layer to still consider it to be of 8 oktas.
MAX_HOLES_OKTA8: 1

# Number (in %) of the cloud hit heights (sorted from smallest to highest) to ignore when
# computing the cloud altitude base, taken to be the min altitude of the
# 100-LAYER_BASE_LVL_PERC % remaining points.
BASE_LVL_ALT_PERC: 5

# Number of Slice/Group/Layer points (in %) - starting from the most recent ones -
# to use to compute the cloud base altitude. 30 would use only the 30% youngest hits.
# Set to 100 to use all the points.
BASE_LVL_LOOKBACK_PERC: 100

# LOWESS parameters used to fit Slice/Groups/Layers altitude trends
LOWESS:
    # Fraction of the slice/group/layer points to consider when deriving the LOWESS smooth fit.
    # Values too small will result in overfitting. Values too large will miss rapid
    # altitude fluctuations.
    frac: 0.35
    # Number of LOWESS fitting iterations
    it: 3

# Slicing parameters
SLICING_PRMS:
    # Clustering distance threshold
    distance_threshold: 0.2
    # Time scaling factor
    dt_scale: 100000
    # Altitude scaling mode
    alt_scale_mode: minmax-scale
    # Altitude scaling parameters (in ft)
    alt_scale_kwargs:
        min_range: 1000

# Clustering parameters
GROUPING_PRMS:
    # Padding (in % of the slice altitude range) to add above and below slices
    # before looking for overlaps
    alt_pad_perc: +10
    # Time scaling factor (in s)
    dt_scale: 180
    # Boost factor, applied to the slice fluffiness to derive the altitude scaling factor
    fluffiness_boost: 2
    # Range of allowed altitude scaling factor (in ft). The fluffiness_boost will never be allowed
    # to push the alt_scaling beyond this range.
    alt_scale_range: [100, 500]

# Layering parameters
LAYERING_PRMS:
    # Minimum okta value below which cluster splitting is not attempted
    min_okta_to_split: 2
    # Minimum separation (in ft) between the mean altitude of identified layers inside groups
    # with a base altitude in the bins set by min_sep_lims. Any layers separated by less than this
    # value will not be split. Any value < than 5 times the vertical resolution of the data will
    # raise a warning, as it may lead to an over-layering of groups. For the ampycloud METAR
    # messages to be consistent with the ICAO rules of layer selection, this should be >=100 ft
    # below 10'000 ft.
    min_sep_vals: [250, 1000]
    # Altitude threshold (in ft) separating the min_sep_val elements.
    # The 0 and + infty extrema will be automatically added to the list by ampycloud.
    # Just list here the intermediate steps.
    min_sep_lims: [10000]
    gmm_kwargs:
        # Whether to use 'BIC' or 'AIC' scores to decide which model is "best".
        scores: BIC
        # Whether to use 'delta', or 'prob' to find the best model.
        # See ampycloud.layer.best_gmm() for details.
        mode: delta
        # Minimum model probability computed from the relative likelihood,
        # below which alternative models with more components will be considered.
        # Only used if mode='prob'
        min_prob: 1.0
        # A model with a smaller score will only be considered "valid"
        # if its score is smaller than delta_mul_gain*current_best_score.
        # Only used if mode='delta'
        delta_mul_gain: 0.95
        # If set, rescale each group between 0 and this value before looking for layers using gmm.
        rescale_0_to_x: 100
